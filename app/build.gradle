plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.google.devtools.ksp" version "1.9.0-1.0.13"
    id "com.google.dagger.hilt.android"
    id 'com.google.gms.google-services' // adicionei isso por conta do Firebase
    id 'com.google.firebase.crashlytics' // adicionei isso por conta do Firebase Crashlytics
    id 'com.google.firebase.firebase-perf' // adicionei isso por conta do Firebase Performance Monitoring
    id 'androidx.room'
}

android {
    namespace 'com.gmail.luizjmfilho.sevenwonders'
    compileSdk 34

    defaultConfig {
        applicationId "com.gmail.luizjmfilho.sevenwonders"
        minSdk 21
        targetSdk 34
        versionCode 6
        versionName "1.2.1"

        testInstrumentationRunner "com.gmail.luizjmfilho.sevenwonders.HiltTestRunner"
    }

    buildTypes {
        debug {
            manifestPlaceholders.firebaseAnalyticsCollectionEnabled = false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders.firebaseAnalyticsCollectionEnabled = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // esse buildFeatures e composeOptions abaixo eu precisei incluir qnd comecei o código.
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.2"
    }

    room {
        schemaDirectory "$projectDir/schemas"
    }
}

dependencies {

    // dependências que já vieram no app
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // dependências que eu mesmo adicionei:
    def composeBom = platform('androidx.compose:compose-bom:2023.10.01')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.material3:material3' // aqui é o Material Design. A versão eu ñ botei pq ela segue o BoM
    implementation 'androidx.compose.ui:ui-tooling-preview' // essa aqui é coisa pra os Preview funcionar
    debugImplementation 'androidx.compose.ui:ui-tooling' // essa aqui é coisa pra os Preview funcionar
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4' // aqui é a parte específica de Compose pra testes
    debugImplementation 'androidx.compose.ui:ui-test-manifest' // aqui é a parte específica de Compose pra testes
    implementation 'androidx.activity:activity-compose:1.6.1' // aqui é genérico, mas sei que inclui o setContent
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1' // aqui tem a ver com o viewModel
    implementation 'androidx.compose.material:material-icons-extended' // aqui é uma biblioteca de ícones
    implementation 'androidx.compose.material:material-icons-core' // aqui é outra biblioteca de ícones
    implementation("androidx.navigation:navigation-compose:2.7.0-alpha01") // importação pra poder usar o navigation
    implementation "androidx.compose.material3:material3-window-size-class:1.1.1" //essa aqui é para eu poder detectar os tamanhos da tela entre compact, medium e expended.

    // essas implementações abaixo é pra mexer com banco de dados
    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-testing:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    implementation "androidx.room:room-ktx:$room_version"

    // essas biblioteca abaixo fazem aquela história de "repositórios falsos" pra poder rodar nos testes.
    testImplementation "org.mockito:mockito-core:5.5.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"

    // essa biblioteca tem a ver com o uso de suspend functions nos testes
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1"

    // essas bibliotecas abaixo tem a ver com o uso do hilt
    def hilt_version = "2.48.1"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    ksp "com.google.dagger:hilt-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // essa biblioteca abaixo tem a ver com o uso do hilt para testes
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"

    // esses imports é pelo Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-perf'

    // as bibliotecas abaixo serão para usar a Google Play In-App Reviews Library
    implementation 'com.google.android.play:review:2.0.1'
    implementation 'com.google.android.play:review-ktx:2.0.1'
}